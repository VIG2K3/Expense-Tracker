
from tkinter import *
from tkinter import messagebox
import sqlite3
import hashlib

# Connect to the SQLite database (or create it if it doesn't exist)
conn = sqlite3.connect('user.db')
cursor = conn.cursor()

# Create a user table if it doesn't exist
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY,
        username TEXT UNIQUE NOT NULL,
        password TEXT NOT NULL
    )
''')

# Commit changes and close the connection
conn.commit()
conn.close()
user_database= {}

window = Tk()
window.title("Expense Tracker")
window.config(pady=100,padx=100,bg="#0C356A")

login_frame = Frame(window)
login_frame.config(bg="#0C356A")
register_frame = Frame(window)
register_frame.config(bg="#0C356A")

def switch_to_login_page():
    register_frame.pack_forget()
    login_frame.pack()

def switch_to_register_page():
    login_frame.pack_forget()
    register_frame.pack()

def hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

# Function to handle registration
def register():
    username = register_username_entry.get()
    password = hash_password(register_username_password_entry.get())
    confirm_password = hash_password(register_confirm_password_entry.get())

    if username and password:
        conn = sqlite3.connect('user.db')
        cursor = conn.cursor()
        if password != confirm_password:
            messagebox.showerror("Registration Error","Confirm password and password is not the same")
        else:
            try:
                user_database[username] = password
                cursor.execute('INSERT INTO users (username, password) VALUES (?, ?)', (username, password))
                conn.commit()
                messagebox.showinfo("Registration Successful", "You are now registered.")
                register_username_entry.delete(0,END)
                register_username_password_entry.delete(0,END)
                register_confirm_password_entry.delete(0,END)
                print(user_database)
                switch_to_login_page()
            except sqlite3.IntegrityError:
                messagebox.showerror("Registration Error", "Username already exists. Please choose another.")
            finally:
                conn.close()
    else:
        messagebox.showerror("Registration Error", "Please enter both a username and password.")

# Function to handle login
def login():
    username = login_username_entry.get()
    password = hash_password(login_password_entry.get())

    if username and password:
        conn = sqlite3.connect('user.db')
        cursor = conn.cursor()

        cursor.execute('SELECT password FROM users WHERE username = ?', (username,))
        stored_password = cursor.fetchone()

        if stored_password and stored_password[0] == password:
            messagebox.showinfo("Login Successful", "Welcome, " + username + "!")
        else:
            messagebox.showerror("Login Error", "Invalid username or password.")

        conn.close()
    else:
        messagebox.showerror("Login Error", "Please enter both a username and password.")


#function to show password and not show it
def toggle_password_visibility():
    if show_password_var.get():
        login_password_entry.config(show="")
        register_confirm_password_entry.config(show="")
        register_username_password_entry.config(show="")
    else:
        login_password_entry.config(show="*")
        register_confirm_password_entry.config(show="*")
        register_username_password_entry.config(show="*")



login_frame.pack()

login_canvas = Canvas(login_frame,width=300, height=300,highlightthickness=0)
logo_img = PhotoImage(file="login.png")
login_canvas.create_image(150,150,image= logo_img)
login_canvas.grid(row=0, column=1)

login_username_label = Label(login_frame,text="Username: ",bg="#40F8FF")
login_username_label.grid(row=1, column=0)

login_password_label = Label(login_frame,text="Password: ",bg="#40F8FF")
login_password_label.grid(row=2,column=0)

login_username_entry = Entry(login_frame,width=30,bg="#D5FFD0")
login_username_entry.grid(row=1,column=1,columnspan=2)


login_password_entry = Entry(login_frame,width=30,bg="#D5FFD0",show="*")
login_password_entry.grid(row=2,column=1,columnspan=2)


show_password_var = BooleanVar()
show_password_checkbox = Checkbutton(login_frame, text="Show Password", variable=show_password_var, command=toggle_password_visibility)
show_password_checkbox.grid(row=2,column=2)

login_button = Button(login_frame,text="Login",bg="#D5FFD0",width=20,command=login)
login_button.grid(row=3,column=1)

register_page_button = Button(login_frame, text="Switch to Registration", command=switch_to_register_page,bg="#D5FFD0")
register_page_button.grid(row=3,column=2)

register_label = Label(register_frame,text="Registration",font=("Arial",50,"bold"))
register_label.grid(row=0,column=1)

register_username_label = Label(register_frame, text="Register")
register_username_label.grid(row=1,column=1)

register_username_entry = Entry(register_frame,width=30)
register_username_entry.grid(row=2,column=1)

register_password_label = Label(register_frame,text="Password")
register_password_label.grid(row=3,column=1)

register_username_password_entry = Entry(register_frame, width=30,show="*")
register_username_password_entry.grid(row=4,column=1)

register_confirm_password_label = Label(register_frame,text="Confirm Password")
register_confirm_password_label.grid(row=5,column=1)

register_confirm_password_entry = Entry(register_frame,width=30,show="*")
register_confirm_password_entry.grid(row=6,column=1)

show_password_checkbox = Checkbutton(register_frame, text="Show Password", variable=show_password_var, command=toggle_password_visibility)
show_password_checkbox.grid(row=6,column=2)

register_button = Button(register_frame, text="Register", command=register)
register_button.grid(row=7,column=1)

login_page_button = Button(register_frame, text="Switch to Login", command=switch_to_login_page)
login_page_button.grid(row=7,column=2)









window.mainloop()
